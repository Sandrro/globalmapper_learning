# train_gnn.min.yaml — используется train.py из твоего сообщения

experiment: graphgen_hcanon_v1
seed: 42

paths:
  data_dir: ./out_4
  model_ckpt: ./out_4/checkpoints/graphgen_hcanon_v1.pt
  zones_json: ./out_4/zones.json
  services_json: ./out_4/services.json
  mask_dir: ./out_4/masks

model:
  hidden: 256           # -> GraphModel(hidden)
  use_mask_cnn: true    # -> GraphModel(use_mask=True)
  mask_dim: 64          # -> MaskEncoderCNN(..., mask_dim)
  mask_size: 128        # -> polygon_to_mask(..., size=(128,128))

training:
  batch_size: 8
  epochs: 1
  lr: 2.0e-4
  device: cuda
  loss_weights:         # -> LossComputer(w=...)
    e: 1.0
    pos: 2.0
    sz: 2.0
    phi: 0.5
    s: 0.5
    a: 0.2
    fl: 0.5
    hf: 0.2
    il: 0.2
    la: 1.0
    sv1: 0.5
    svc: 1.0
    coll: 0.5
    la_block: 0.5       # БЛОЧНЫЕ ЛОССЫ реально считаются в LossComputer
    svc_block: 0.5

sampler:
  mode: two_stream          # -> --sampler-mode
  majority_frac: 0.5        # -> --majority-frac
  tau_majority: 0.8         # -> --tau-majority
  use_residential_stratify: true
  use_residential_clusters: true
  epoch_len_batches: null

hf:
  push: false
  repo_id: your-username/graphgen-hcanon-v1
  private: true
  token: null

logging:
  log_level: INFO
